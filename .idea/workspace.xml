<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0cf15703-18cf-4ce5-9c01-e17655c8b5f6" name="Changes" comment="a" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/bot-messages-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/bot-weather-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/commons">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/demo">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/tg-starter">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/weather-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/weather-services">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/tg-starter">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/weather-service">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Private Environment File" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="file://$PROJECT_DIR$/requsests.http" environment="dev" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2ZZqt11amNxZRF0FFEY40srNJyM" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;17&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/mihai/IdeaProjects/weather_bot/commons/src/main/java/ru/handh&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.31494254&quot;,
    &quot;rest.client.default.execution.environment&quot;: &quot;dev&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;build.tools&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\mihai\IdeaProjects\weather_bot\commons\src\main\java\ru\handh" />
      <recent name="C:\Users\mihai\IdeaProjects\weather_bot\bot-weather-service" />
      <recent name="C:\Users\mihai\IdeaProjects\weather_bot\weather-services" />
      <recent name="C:\Users\mihai\IdeaProjects\weather_bot\commons\src\main\resources" />
      <recent name="C:\Users\mihai\IdeaProjects\weather_bot\tg-starter" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="ru.handh" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
    <option name="hiddenConfigurations">
      <map>
        <entry key="SpringBootApplicationConfigurationType">
          <value>
            <set>
              <option value="WeatherServiceApplication" />
              <option value="WeatherServicesApplication" />
            </set>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.BotMessagesServiceApplication">
    <configuration name="weather-service [dependencies]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/weather-service" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="dependencies" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="weather_bot [dependencies]" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="APIKEY" value="d68292891fafb2a9ce37d00a676075cb " />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="dependencies" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="requsests | set webhook" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/requsests.http" requestIdentifier="set webhook" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="BotMessagesServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <envs>
        <env name="BOT_USERNAME" value="weatherhh_bot" />
        <env name="BOT_TOKEN" value="6427718867:AAEKnlAUP4cLOtVlaFmMUMI0e40JFJC_33Q" />
      </envs>
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="weather_bot.bot-messages-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.handh.BotMessagesServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ru.handh.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WeatherServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="weather_bot.bot-weather-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.weatherservice.WeatherServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WeatherServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <envs>
        <env name="APIKEY" value="d68292891fafb2a9ce37d00a676075cb " />
      </envs>
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="weather_bot.bot-weather-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.weatherservice.WeatherServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WeatherServicesApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="weather-services.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.weatherservices.WeatherServicesApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="bot-weather-service/compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="bot-weather-service/compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="weather-service/docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="weather-service/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.bot-weather-service/compose.yaml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      <item itemvalue="Docker.weather-service/docker-compose.yaml: Compose Deployment" />
      <item itemvalue="Gradle.weather_bot [dependencies]" />
      <item itemvalue="Gradle.weather-service [dependencies]" />
      <item itemvalue="HTTP Request.requsests | set webhook" />
      <item itemvalue="Spring Boot.WeatherServiceApplication (1)" />
      <item itemvalue="Spring Boot.WeatherServicesApplication" />
      <item itemvalue="Spring Boot.BotMessagesServiceApplication" />
      <item itemvalue="Spring Boot.WeatherServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.bot-weather-service/compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.weather-service/docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Gradle.weather-service [dependencies]" />
        <item itemvalue="HTTP Request.requsests | set webhook" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0cf15703-18cf-4ce5-9c01-e17655c8b5f6" name="Changes" comment="" />
      <created>1702640165234</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1702640165234</updated>
      <workItem from="1702640166289" duration="262000" />
      <workItem from="1702640455003" duration="1508000" />
      <workItem from="1702714995998" duration="1952000" />
      <workItem from="1702717009323" duration="951000" />
      <workItem from="1702720112353" duration="2648000" />
      <workItem from="1702722827802" duration="15235000" />
      <workItem from="1702806858507" duration="749000" />
      <workItem from="1702808031269" duration="1882000" />
      <workItem from="1702810021079" duration="1247000" />
      <workItem from="1702813238196" duration="1460000" />
      <workItem from="1702814747657" duration="7091000" />
      <workItem from="1702836522746" duration="1781000" />
      <workItem from="1702894442619" duration="8440000" />
      <workItem from="1702904597345" duration="29756000" />
      <workItem from="1702975012875" duration="534000" />
      <workItem from="1702975588619" duration="4490000" />
      <workItem from="1702980470697" duration="1237000" />
      <workItem from="1702988563402" duration="37457000" />
      <workItem from="1703062308616" duration="198000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="a" />
    <option name="LAST_COMMIT_MESSAGE" value="a" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint type="java-exception">
          <properties class="java.lang.IllegalStateException" package="java.lang" />
          <option name="timeStamp" value="17" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>